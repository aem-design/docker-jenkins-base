language: java

if: tag is blank

services:
  - 'docker'

before_install:
  - "source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_config.sh)"
  - "source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_version.sh)"
  - export JENKINS_VERSION=$(wget -q -O - http://mirrors.jenkins.io/war-stable/ | xmllint --html --xpath "//table/tr[position() = (last() - 2)]/td[2]/a/text()" - | sed -e 's/[^0-9\.]//g')
  - export RELEASE_DATE=$(wget -q -O - http://mirrors.jenkins.io/war-stable/ | xmllint --html --xpath "//table/tr[position() = (last() - 2)]/td[3]/text()" - | sed -n 's/\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\).*/\1/p')
  - export TODAY=$(date "+%Y-%m-%d")


#build and test
install:
  - docker images
  - docker build --pull -t $IMAGE:$IMAGE_VERSION --build-arg JENKINS_VERSION=$JENKINS_VERSION .
  - docker images
  - "source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/container_verify.sh)"
#  on:
#    condition: $RELEASE_DATE = $TODAY

#test
script:
  - echo "LOGIN TO HUB.DOCKER"
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - echo "PUSH HUB.DOCKER"
  - docker push $IMAGE:$IMAGE_VERSION
  - if [[ $TRAVIS_BRANCH == "master" ]]; then docker tag $IMAGE:$IMAGE_VERSION $IMAGE:latest && docker push $IMAGE:latest; fi
  - echo "UPDATE README IN HUB.DOCKER"
  - if [[ $TRAVIS_BRANCH == "master" ]]; then docker run --rm -v $(pwd):/data/ aemdesign/dockerhub-description "$DOCKER_USERNAME" "$DOCKER_PASSWORD" "$IMAGE"; fi
#  on:
#    condition: $RELEASE_DATE = $TODAY

## Get the project version
before_deploy:
  - if [[ $TRAVIS_BRANCH == "master" ]]; then git tag $TRAVIS_TAG; fi
#  on:
#    condition: $RELEASE_DATE = $TODAY

## Create release in GitHub
deploy:
  provider: releases
  tag_name: $TRAVIS_TAG
  name: $TRAVIS_TAG
  target_commitish: $TRAVIS_COMMIT
  api_key: $GITHUB_TOKEN
  skip_cleanup: true
  on:
    branch: master
    condition: $RELEASE_DATE = $TODAY
